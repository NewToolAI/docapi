{
  "/Volumes/DATA/工作/Work/my_project/docapi/test/flask_project/flask_api.py": [
    {
      "url": "/sub_api/users/scores",
      "md5": "e904a62e1d3f6242f6c4ab0b736d6089",
      "code": "# 获取学生成绩列表\n@sub_api.route('/users/scores', methods=['GET'])\ndef get_names():\n    ID = request.args.get('ID')\n    return f\"scores of {ID}\"\n",
      "doc": "### GET - /users/scores\n\n##### Update time\n\n2024-11-24 17:54\n\n##### Description\n\nThis interface is used to obtain the scores of a student specified by their ID. The user needs to provide an ID parameter, and the interface will return the scores of the student with that ID.\n\n##### Parameters - Query\n\n- `ID` (string): Required, student ID.\n\n##### Return value - Text\n\n- A string containing the scores of the specified student.\n\n##### Code example\n\n**curl:**\n\n```bash\ncurl -X GET http://{API_BASE}/users/scores?ID=12345\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = \"http://{API_BASE}/users/scores\"\nparams = {\"ID\": \"12345\"}\n\nresponse = requests.get(url, params=params)\n\nprint(\"status code:\", response.status_code)\nprint(\"response content:\", response.text)\n```\n\n**javascript:**\n\n```javascript\nconst axios = require('axios');\n\nconst url = 'http://{API_BASE}/users/scores';\nconst params = { ID: '12345' };\n\naxios.get(url, { params: params })\n    .then(response => {\n        console.log('状态码:', response.status);\n        console.log('响应内容:', response.data);\n    })\n    .catch(error => {\n        console.error('错误:', error.response ? error.response.data : error.message);\n    });\n```"
    }
  ],
  "/Volumes/DATA/工作/Work/my_project/docapi/test/flask_project/flask_server.py": [
    {
      "url": "/users/<int:user_id>",
      "md5": "9a103ccba8c9fac13d1e135cfd1cdc4e",
      "code": "@app.route('/users/<int:user_id>', methods=['GET'])\ndef get_user(user_id):\n    '''获取用户信息'''\n    return f\"User {user_id}\"\n",
      "doc": "### GET - /users/{user_id}\n\n##### Update time\n\n2024-11-24 17:54\n\n##### Description\n\nThis interface is used to retrieve information about a specific user. The user ID is provided as a path parameter, and the interface returns the user's information.\n\n##### Parameters - Path\n\n- `user_id` (integer): Required, the unique identifier of the user.\n\n##### Return value - Text\n\n- A string containing the user's information, formatted as \"User {user_id}\".\n\n##### Code example\n\n**curl:**\n\n```bash\ncurl -X GET http://{API_BASE}/users/1\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = \"http://{API_BASE}/users/1\"\n\nresponse = requests.get(url)\n\nprint(\"status code:\", response.status_code)\nprint(\"response content:\", response.text)\n```\n\n**javascript:**\n\n```javascript\nconst axios = require('axios');\n\nconst url = 'http://{API_BASE}/users/1';\n\naxios.get(url)\n    .then(response => {\n        console.log('状态码:', response.status);\n        console.log('响应内容:', response.data);\n    })\n    .catch(error => {\n        console.error('错误:', error.response ? error.response.data : error.message);\n    });\n```"
    },
    {
      "url": "/users/create",
      "md5": "2620df460ceadf3fb0fdaba1ecc7bb37",
      "code": "# 创建学生系统用户\n@app.route('/users/create', methods=['POST'])\ndef create_user():\n    params = request.get_json()\n    name = params['name']\n    age = params['age']\n    data = {'name': name, 'age': age}\n\n    return jsonify(code=0, data=data, error=None)\n",
      "doc": "### POST - /users/create\n\n##### Update time\n\n2024-11-24 17:54\n\n##### Description\n\nThis interface is used to create a new student system user. The user needs to provide the name and age parameters, and the interface will return the created user information.\n\n##### Parameters - Json\n\n- `name` (string): Required, the name of the user.\n- `age` (integer): Required, the age of the user.\n\n##### Return value - Json\n\n- `code` (integer): Return status code, 0 means success.\n- `data` (object): Contains the created user information.\n  - `name` (string): The name of the user.\n  - `age` (integer): The age of the user.\n- `error` (string): Error message, `null` if successful.\n\n##### Code example\n\n**curl:**\n\n```bash\ncurl -X POST http://{API_BASE}/users/create -H \"Content-Type: application/json\" -d '{\"name\": \"John Doe\", \"age\": 20}'\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = \"http://{API_BASE}/users/create\"\ndata = {\"name\": \"John Doe\", \"age\": 20}\n\nresponse = requests.post(url, json=data)\n\nprint(\"status code:\", response.status_code)\nprint(\"response content:\", response.json())\n```\n\n**javascript:**\n\n```javascript\nconst axios = require('axios');\n\nconst url = 'http://{API_BASE}/users/create';\nconst data = { name: 'John Doe', age: 20 };\n\naxios.post(url, data)\n    .then(response => {\n        console.log('状态码:', response.status);\n        console.log('响应内容:', response.data);\n    })\n    .catch(error => {\n        console.error('错误:', error.response ? error.response.data : error.message);\n    });\n```"
    },
    {
      "url": "/users/list",
      "md5": "50e2d19e96db6ac8ee2ade07fbfc9715",
      "code": "# 获取年级学生列表\n@app.route('/users/list', methods=['GET', 'POST'])\ndef get_users():\n    try:\n        parmams = request.get_json()\n        grade = parmams['grade']\n        data = f'List of {grade} students'.split(' ')\n\n        return jsonify(code=0, data=data, error=None)\n    except Exception as e:\n        return jsonify(code=1, data=None, error=str(e))\n",
      "doc": "### GET | POST - /users/list\n\n##### Update time\n\n2024-11-24 17:54\n\n##### Description\n\nThis interface is used to obtain a list of students in a specified grade. The user needs to provide a grade parameter, and the interface will return a list of students in that grade.\n\n##### Parameters - Json\n\n- `grade` (string): Required, grade name.\n\n##### Return value - Json\n\n- `code` (integer): Return status code, 0 means success.\n- `data` (array): Contains a list of students in that grade.\n- `error` (string): Error message, `null` if successful.\n\n##### Code example\n\n**curl:**\n\n```bash\ncurl -X GET http://{API_BASE}/users/list -H \"Content-Type: application/json\" -d '{\"grade\": \"grade 1\"}'\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = \"http://{API_BASE}/users/list\"\ndata = {\"grade\": \"grade 1\"}\n\nresponse = requests.get(url, json=data)\n\nprint(\"status code:\", response.status_code)\nprint(\"response content:\", response.json())\n```\n\n**javascript:**\n\n```javascript\nconst axios = require('axios');\n\nconst url = 'http://{API_BASE}/users/list';\nconst data = { grade: 'grade 1' };\n\naxios.get(url, { params: data })\n    .then(response => {\n        console.log('Status code:', response.status);\n        console.log('Response content:', response.data);\n    })\n    .catch(error => {\n        console.error('Error:', error.response ? error.response.data : error.message);\n    });\n```\n\n**Note:** The `error` field in the response will be `null` if the request is successful."
    }
  ]
}