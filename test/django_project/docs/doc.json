{
  "/Volumes/DATA/工作/Work/my_project/docapi/test/django_project/students/views.py": [
    {
      "url": "/student",
      "md5": "615e7a1bf1fba460a4452f37aecad2cb",
      "code": "# API Path: /student\n\ndef student_list(request):\n    '''学生列表'''\n    students = Student.objects.all().values('id', 'name', 'age', 'grade', 'email')\n    return JsonResponse(list(students), safe=False)\n",
      "doc": "### GET - /student\n\n##### Last Updated\n\n2024-12-09 14:57\n\n##### Description\n\nThis API endpoint retrieves a list of all students with their basic information including ID, name, age, grade, and email.\n\n##### Request Headers\n\n- None\n\n##### Request Parameters\n\n- None\n\n##### Response - JSON\n\n- `id` (integer): The unique identifier for the student.\n- `name` (string): The name of the student.\n- `age` (integer): The age of the student.\n- `grade` (string): The grade of the student.\n- `email` (string): The email address of the student.\n\n##### Code Example \n\n**curl:**\n\n```bash\ncurl -X GET 'http://API_BASE/student'\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = 'http://localhost:API_BASE/student'\n\nresponse = requests.get(url)\nprint(response.json())\n```\n\n**javascript:**\n\n```javascript\nimport axios from 'axios';\n\nconst url = 'http://API_BASE/student';\n\naxios.get(url)\n    .then(response => console.log(response.data))\n    .catch(error => console.error(error));\n```"
    },
    {
      "url": "/student/add",
      "md5": "7fe606eaff9374b9ea5132127043e5f0",
      "code": "# API Path: /student/add\n\n# 增加学生\ndef student_add(request):\n    if request.method == 'POST':\n        name = request.POST.get('name')\n        age = request.POST.get('age')\n        grade = request.POST.get('grade')\n        email = request.POST.get('email')\n\n        if not all([name, age, grade, email]):\n            return JsonResponse({'error': 'Missing required fields.'}, status=400)\n\n        student = Student.objects.create(name=name, age=age, grade=grade, email=email)\n        return JsonResponse({'id': student.id, 'message': 'Student added successfully'}, status=201)\n\n    return JsonResponse({'error': 'Invalid request method'}, status=405)\n",
      "doc": "### POST - /student/add\n\n##### Last Updated\n\n2024-12-09 14:57\n\n##### Description\n\nThis API endpoint allows for the addition of a new student to the database. Users must provide the student's name, age, grade, and email. The endpoint will create a new student record and return the student's ID upon successful addition.\n\n##### Request Headers\n\n- `Content-Type` (string): Should be set to `application/x-www-form-urlencoded` or `multipart/form-data`.\n\n##### Request Parameters - Form Data\n\n- `name` (string): Required. The name of the student.\n- `age` (integer): Required. The age of the student.\n- `grade` (string): Required. The grade of the student.\n- `email` (string): Required. The email address of the student.\n\n##### Response - JSON\n\n- `id` (integer): The ID of the newly created student record.\n- `message` (string): A message indicating the success of the operation.\n- `error` (string): Error message if the operation fails.\n\n##### Code Example \n\n**curl:**\n\n```bash\ncurl -X POST 'http://API_BASE/student/add' \\\n     -d 'name=John Doe' \\\n     -d 'age=15' \\\n     -d 'grade=10' \\\n     -d 'email=johndoe@example.com'\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = 'http://localhost:API_BASE/student/add'\ndata = {\n    'name': 'John Doe',\n    'age': '15',\n    'grade': '10',\n    'email': 'johndoe@example.com'\n}\n\nresponse = requests.post(url, data=data)\nprint(response.json())\n```\n\n**javascript:**\n\n```javascript\nimport axios from 'axios';\n\nconst url = 'http://API_BASE/student/add';\nconst data = new FormData();\ndata.append('name', 'John Doe');\ndata.append('age', '15');\ndata.append('grade', '10');\ndata.append('email', 'johndoe@example.com');\n\naxios.post(url, data)\n    .then(response => console.log(response.data))\n    .catch(error => console.error(error));\n```"
    },
    {
      "url": "/student/delete/<int:student_id>",
      "md5": "050fedb91bc5a450fd4b06b0267dd2b4",
      "code": "# API Path: /student/delete/<int:student_id>\n\ndef student_delete(request, student_id):\n    student = get_object_or_404(Student, id=student_id)\n\n    if request.method == 'DELETE':\n        student.delete()\n        return JsonResponse({'id': student_id, 'message': 'Student deleted successfully'})\n\n    return JsonResponse({'error': 'Invalid request method'}, status=405)\n",
      "doc": "### DELETE - /student/delete/{student_id}\n\n##### Last Updated\n\n2024-12-09 15:00\n\n##### Description\n\nThis API endpoint deletes a student record from the database based on the provided student ID. The endpoint only accepts DELETE requests.\n\n##### Request Parameters\n\n- `student_id` (integer): Required. The ID of the student to be deleted.\n\n##### Response - JSON\n\n- `id` (integer): The ID of the student that was deleted.\n\n- `message` (string): A message indicating the success of the operation.\n\n- `error` (string): An error message if the request method is invalid.\n\n##### Code Example \n\n**curl:**\n\n```bash\ncurl -X DELETE 'http://API_BASE/student/delete/123'\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = 'http://localhost:API_BASE/student/delete/123'\nresponse = requests.delete(url)\nprint(response.json())\n```\n\n**javascript:**\n\n```javascript\nimport axios from 'axios';\n\nconst url = 'http://API_BASE/student/delete/123';\n\naxios.delete(url)\n    .then(response => console.log(response.data))\n    .catch(error => console.error(error));\n```"
    },
    {
      "url": "/student/edit/<int:student_id>",
      "md5": "d2d0dea34e5c418b97add4b9d7571dd6",
      "code": "# API Path: /student/edit/<int:student_id>\n\ndef student_edit(request, student_id):\n    student = get_object_or_404(Student, id=student_id)\n\n    if request.method == 'POST':\n        student.name = request.POST.get('name', student.name)\n        student.age = request.POST.get('age', student.age)\n        student.grade = request.POST.get('grade', student.grade)\n        student.email = request.POST.get('email', student.email)\n        student.save()\n\n        return JsonResponse({'id': student.id, 'message': 'Student updated successfully'})\n\n    return JsonResponse({'error': 'Invalid request method'}, status=405)\n",
      "doc": "### POST - /student/edit/<int:student_id>\n\n##### Last Updated\n\n2024-12-09 14:57\n\n##### Description\n\nThis API endpoint allows for the editing of a student's details. Users must provide the student ID in the URL path and can update the student's name, age, grade, and email through POST parameters.\n\n##### Request Parameters - URL Path\n\n- `student_id` (integer): Required. The ID of the student to be edited.\n\n##### Request Parameters - POST\n\n- `name` (string): Optional. The new name of the student.\n- `age` (integer): Optional. The new age of the student.\n- `grade` (string): Optional. The new grade of the student.\n- `email` (string): Optional. The new email of the student.\n\n##### Response - JSON\n\n- `id` (integer): The ID of the student that was updated.\n- `message` (string): A success message indicating the student was updated successfully.\n\n- **Error Response:**\n  - `error` (string): Error message indicating an invalid request method.\n  - `status` (integer): HTTP status code `405` for Method Not Allowed.\n\n##### Code Example \n\n**curl:**\n\n```bash\ncurl -X POST 'http://API_BASE/student/edit/123' \\\n     -d 'name=John Doe' \\\n     -d 'age=15' \\\n     -d 'grade=10' \\\n     -d 'email=johndoe@example.com'\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = 'http://localhost:API_BASE/student/edit/123'\ndata = {\n    'name': 'John Doe',\n    'age': '15',\n    'grade': '10',\n    'email': 'johndoe@example.com'\n}\n\nresponse = requests.post(url, data=data)\nprint(response.json())\n```\n\n**javascript:**\n\n```javascript\nimport axios from 'axios';\n\nconst url = 'http://API_BASE/student/edit/123';\nconst data = {\n    name: 'John Doe',\n    age: '15',\n    grade: '10',\n    email: 'johndoe@example.com'\n};\n\naxios.post(url, data)\n    .then(response => console.log(response.data))\n    .catch(error => console.error(error));\n```"
    }
  ]
}