{
  "/Volumes/DATA/工作/Work/my_project/docapi/test/django_project/students/views.py": [
    {
      "url": "/student",
      "md5": "615e7a1bf1fba460a4452f37aecad2cb",
      "code": "# API Path: /student\n\ndef student_list(request):\n    '''学生列表'''\n    students = Student.objects.all().values('id', 'name', 'age', 'grade', 'email')\n    return JsonResponse(list(students), safe=False)\n",
      "doc": "### GET - /student\n\n##### 更新时间\n\n2024-12-05 14:55\n\n##### 描述\n\n该接口用于获取所有学生的列表，返回学生的基本信息，包括ID、姓名、年龄、年级和邮箱。\n\n##### 参数\n\n无需参数。\n\n##### 返回值 - Json\n\n- `id` (integer): 学生的唯一标识符。\n- `name` (string): 学生的姓名。\n- `age` (integer): 学生的年龄。\n- `grade` (string): 学生所在的年级。\n- `email` (string): 学生的邮箱地址。\n\n##### 代码示例 \n\n**curl:**\n\n```bash\ncurl -X GET http://{API_BASE}/student\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = \"http://{API_BASE}/student\"\n\nresponse = requests.get(url)\n\nprint(\"状态码:\", response.status_code)\nprint(\"响应内容:\", response.json())\n```\n\n**javascript:**\n\n```javascript\nconst axios = require('axios');\n\nconst url = 'http://{API_BASE}/student';\n\naxios.get(url)\n    .then(response => {\n        console.log('状态码:', response.status);\n        console.log('响应内容:', response.data);\n    })\n    .catch(error => {\n        console.error('错误:', error.response ? error.response.data : error.message);\n    });\n```"
    },
    {
      "url": "/student/add",
      "md5": "7fe606eaff9374b9ea5132127043e5f0",
      "code": "# API Path: /student/add\n\n# 增加学生\ndef student_add(request):\n    if request.method == 'POST':\n        name = request.POST.get('name')\n        age = request.POST.get('age')\n        grade = request.POST.get('grade')\n        email = request.POST.get('email')\n\n        if not all([name, age, grade, email]):\n            return JsonResponse({'error': 'Missing required fields.'}, status=400)\n\n        student = Student.objects.create(name=name, age=age, grade=grade, email=email)\n        return JsonResponse({'id': student.id, 'message': 'Student added successfully'}, status=201)\n\n    return JsonResponse({'error': 'Invalid request method'}, status=405)\n",
      "doc": "### POST - /student/add\n\n##### 更新时间\n\n2024-12-05 14:55\n\n##### 描述\n\n该接口用于增加一个新的学生记录。用户需要提供学生的姓名、年龄、年级和邮箱信息，接口将创建学生记录并返回学生的ID。\n\n##### 参数 - POST\n\n- `name` (string): 必填，学生姓名。\n- `age` (integer): 必填，学生年龄。\n- `grade` (string): 必填，学生年级。\n- `email` (string): 必填，学生邮箱。\n\n##### 返回值 - Json\n\n- `id` (integer): 新增学生的ID。\n- `message` (string): 操作成功或失败的消息。\n- `error` (string): 错误信息，如果请求成功则为空字符串。\n\n##### 代码示例 \n\n**curl:**\n\n```bash\ncurl -X POST http://{API_BASE}/student/add -d \"name=张三&age=18&grade=高一&email=zhangsan@example.com\"\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = \"http://{API_BASE}/student/add\"\ndata = {\n    \"name\": \"张三\",\n    \"age\": 18,\n    \"grade\": \"高一\",\n    \"email\": \"zhangsan@example.com\"\n}\n\nresponse = requests.post(url, data=data)\n\nprint(\"状态码:\", response.status_code)\nprint(\"响应内容:\", response.json())\n```\n\n**javascript:**\n\n```javascript\nconst axios = require('axios');\n\nconst url = 'http://{API_BASE}/student/add';\nconst data = {\n    name: '张三',\n    age: 18,\n    grade: '高一',\n    email: 'zhangsan@example.com'\n};\n\naxios.post(url, data)\n    .then(response => {\n        console.log('状态码:', response.status);\n        console.log('响应内容:', response.data);\n    })\n    .catch(error => {\n        console.error('错误:', error.response ? error.response.data : error.message);\n    });\n```"
    },
    {
      "url": "/student/delete/<int:student_id>",
      "md5": "050fedb91bc5a450fd4b06b0267dd2b4",
      "code": "# API Path: /student/delete/<int:student_id>\n\ndef student_delete(request, student_id):\n    student = get_object_or_404(Student, id=student_id)\n\n    if request.method == 'DELETE':\n        student.delete()\n        return JsonResponse({'id': student_id, 'message': 'Student deleted successfully'})\n\n    return JsonResponse({'error': 'Invalid request method'}, status=405)\n",
      "doc": "### DELETE - /student/delete/{student_id}\n\n##### 更新时间\n\n2024-12-05 14:55\n\n##### 描述\n\n该接口用于删除指定ID的学生记录。用户需要提供学生ID，接口将删除该学生记录并返回删除成功的消息。\n\n##### 参数 - URL\n\n- `student_id` (integer): 必填，学生的唯一标识符。\n\n##### 返回值 - Json\n\n- `id` (integer): 被删除学生的ID。\n- `message` (string): 删除成功的消息。\n- `error` (string): 错误信息，成功时为空字符串。\n\n##### 代码示例 \n\n**curl:**\n\n```bash\ncurl -X DELETE http://{API_BASE}/student/delete/123\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = \"http://{API_BASE}/student/delete/123\"\n\nresponse = requests.delete(url)\n\nprint(\"状态码:\", response.status_code)\nprint(\"响应内容:\", response.json())\n```\n\n**javascript:**\n\n```javascript\nconst axios = require('axios');\n\nconst url = 'http://{API_BASE}/student/delete/123';\n\naxios.delete(url)\n    .then(response => {\n        console.log('状态码:', response.status);\n        console.log('响应内容:', response.data);\n    })\n    .catch(error => {\n        console.error('错误:', error.response ? error.response.data : error.message);\n    });\n```"
    },
    {
      "url": "/student/edit/<int:student_id>",
      "md5": "d2d0dea34e5c418b97add4b9d7571dd6",
      "code": "# API Path: /student/edit/<int:student_id>\n\ndef student_edit(request, student_id):\n    student = get_object_or_404(Student, id=student_id)\n\n    if request.method == 'POST':\n        student.name = request.POST.get('name', student.name)\n        student.age = request.POST.get('age', student.age)\n        student.grade = request.POST.get('grade', student.grade)\n        student.email = request.POST.get('email', student.email)\n        student.save()\n\n        return JsonResponse({'id': student.id, 'message': 'Student updated successfully'})\n\n    return JsonResponse({'error': 'Invalid request method'}, status=405)\n",
      "doc": "### POST - /student/edit/<int:student_id>\n\n##### 更新时间\n\n2024-12-05 14:55\n\n##### 描述\n\n该接口用于编辑指定学生的信息。用户需要提供学生ID，并通过POST请求发送更新后的学生信息。\n\n##### 参数 - URL\n\n- `student_id` (integer): 必填，学生的唯一标识符。\n\n##### 参数 - POST\n\n- `name` (string): 可选，学生的姓名。\n- `age` (integer): 可选，学生的年龄。\n- `grade` (string): 可选，学生的年级。\n- `email` (string): 可选，学生的电子邮件地址。\n\n##### 返回值 - Json\n\n- `id` (integer): 成功更新后返回的学生ID。\n- `message` (string): 操作成功或失败的消息。\n- `error` (string): 错误信息，仅在请求方法无效时返回。\n\n##### 代码示例 \n\n**curl:**\n\n```bash\ncurl -X POST http://{API_BASE}/student/edit/123 -H \"Content-Type: application/x-www-form-urlencoded\" -d \"name=张三&age=18&grade=高二&email=zhangsan@example.com\"\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = \"http://{API_BASE}/student/edit/123\"\ndata = {\n    \"name\": \"张三\",\n    \"age\": 18,\n    \"grade\": \"高二\",\n    \"email\": \"zhangsan@example.com\"\n}\n\nresponse = requests.post(url, data=data)\n\nprint(\"状态码:\", response.status_code)\nprint(\"响应内容:\", response.json())\n```\n\n**javascript:**\n\n```javascript\nconst axios = require('axios');\n\nconst url = 'http://{API_BASE}/student/edit/123';\nconst data = new URLSearchParams({\n    name: '张三',\n    age: 18,\n    grade: '高二',\n    email: 'zhangsan@example.com'\n});\n\naxios.post(url, data.toString(), {\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n})\n    .then(response => {\n        console.log('状态码:', response.status);\n        console.log('响应内容:', response.data);\n    })\n    .catch(error => {\n        console.error('错误:', error.response ? error.response.data : error.message);\n    });\n```"
    }
  ]
}