{
  "/Volumes/DATA/工作/Work/my_project/docapi/test/django_project/students/views.py": [
    {
      "url": "student/",
      "md5": "1b89a33f91824f087542694994552b40",
      "code": "def student_list(request):\n    students = Student.objects.all().values('id', 'name', 'age', 'grade', 'email')\n    return JsonResponse(list(students), safe=False)\n",
      "doc": "### GET - /student/list\n\n##### 更新时间\n\n2024-12-05 12:21\n\n##### 描述\n\n该接口用于获取所有学生的信息列表。接口将返回包含学生ID、姓名、年龄、年级和电子邮件的JSON数组。\n\n##### 参数\n\n无\n\n##### 返回值 - Json\n\n- `id` (integer): 学生的唯一标识符。\n\n- `name` (string): 学生的姓名。\n\n- `age` (integer): 学生的年龄。\n\n- `grade` (string): 学生的年级。\n\n- `email` (string): 学生的电子邮件地址。\n\n##### 代码示例 \n\n**curl:**\n\n```bash\ncurl -X GET http://{API_BASE}/student/list\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = \"http://{API_BASE}/student/list\"\n\nresponse = requests.get(url)\n\nprint(\"状态码:\", response.status_code)\nprint(\"响应内容:\", response.json())\n```\n\n**javascript:**\n\n```javascript\nconst axios = require('axios');\n\nconst url = 'http://{API_BASE}/student/list';\n\naxios.get(url)\n    .then(response => {\n       console.log('状态码:', response.status);\n        console.log('响应内容:', response.data);\n      })\n    .catch(error => {\n        console.error('错误:', error.response ? error.response.data : error.message);\n    });\n```"
    },
    {
      "url": "student/add/",
      "md5": "9289f36a1a65d6f67aa670ee44e74be2",
      "code": "def student_add(request):\n    if request.method == 'POST':\n        name = request.POST.get('name')\n        age = request.POST.get('age')\n        grade = request.POST.get('grade')\n        email = request.POST.get('email')\n\n        if not all([name, age, grade, email]):\n            return JsonResponse({'error': 'Missing required fields.'}, status=400)\n\n        student = Student.objects.create(name=name, age=age, grade=grade, email=email)\n        return JsonResponse({'id': student.id, 'message': 'Student added successfully'}, status=201)\n\n    return JsonResponse({'error': 'Invalid request method'}, status=405)\n",
      "doc": "### POST - /student/add\n\n##### 更新时间\n\n2024-12-05 12:21\n\n##### 描述\n\n该接口用于添加一个新的学生记录。用户需要通过POST请求提交学生的姓名、年龄、年级和电子邮件。\n\n##### 参数 - Form Data\n\n- `name` (string): 必填，学生的姓名。\n- `age` (integer): 必填，学生的年龄。\n- `grade` (string): 必填，学生的年级。\n- `email` (string): 必填，学生的电子邮件地址。\n\n##### 返回值 - Json\n\n- `id` (integer): 新添加的学生记录的ID。\n- `message` (string): 操作结果信息。\n\n- `error` (string): 错误信息，成功时为空字符串。\n\n##### 状态码\n\n- 201: 创建成功。\n- 400: 请求中缺少必要的字段。\n- 405: 请求方法无效。\n\n##### 代码示例 \n\n**curl:**\n\n```bash\ncurl -X POST http://{API_BASE}/student/add -H \"Content-Type: application/x-www-form-urlencoded\" -d \"name=张三&age=18&grade=高一&email=zhangsan@example.com\"\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = \"http://{API_BASE}/student/add\"\ndata = {\n    \"name\": \"张三\",\n    \"age\": \"18\",\n    \"grade\": \"高一\",\n    \"email\": \"zhangsan@example.com\"\n}\n\nresponse = requests.post(url, data=data)\n\nprint(\"状态码:\", response.status_code)\nprint(\"响应内容:\", response.json())\n```\n\n**javascript:**\n\n```javascript\nconst axios = require('axios');\n\nconst url = 'http://{API_BASE}/student/add';\nconst data = {\n    name: '张三',\n    age: '18',\n    grade: '高一',\n    email: 'zhangsan@example.com'\n};\n\naxios.post(url, data)\n    .then(response => {\n        console.log('状态码:', response.status);\n        console.log('响应内容:', response.data);\n    })\n    .catch(error => {\n        console.error('错误:', error.response ? error.response.data : error.message);\n    });\n```"
    },
    {
      "url": "student/delete/<int:student_id>/",
      "md5": "3b8d4ec5feabdbc1d6edeaa331303e28",
      "code": "def student_delete(request, student_id):\n    student = get_object_or_404(Student, id=student_id)\n\n    if request.method == 'DELETE':\n        student.delete()\n        return JsonResponse({'id': student_id, 'message': 'Student deleted successfully'})\n\n    return JsonResponse({'error': 'Invalid request method'}, status=405)\n",
      "doc": "### DELETE - /student/<student_id>\n\n##### 更新时间\n\n2023-04-01 12:00\n\n##### 描述\n\n该接口用于删除指定ID的学生信息。用户需要提供学生的ID，接口将删除该学生的信息。\n\n##### 参数\n\n- `student_id` (integer): 必填，学生的唯一标识符。\n\n##### 返回值\n\n- `id` (integer): 删除成功的学生的ID。\n- `message` (string): 操作结果信息。\n\n##### 状态码\n\n- 200: 删除成功。\n- 405: 请求方法错误。\n\n##### 代码示例\n\n**curl:**\n\n```bash\ncurl -X DELETE http://{API_BASE}/student/123\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = \"http://{API_BASE}/student/123\"\n\nresponse = requests.delete(url)\n\nprint(\"状态码:\", response.status_code)\nprint(\"响应内容:\", response.json())\n```\n\n**javascript:**\n\n```javascript\nconst axios = require('axios');\n\nconst url = 'http://{API_BASE}/student/123';\n\naxios.delete(url)\n    .then(response => {\n        console.log('状态码:', response.status);\n        console.log('响应内容:', response.data);\n    })\n    .catch(error => {\n        console.error('错误:', error.response ? error.response.data : error.message);\n    });\n```"
    },
    {
      "url": "student/edit/<int:student_id>/",
      "md5": "352f2e17ca23bc6331c220bc46a66ef3",
      "code": "def student_edit(request, student_id):\n    student = get_object_or_404(Student, id=student_id)\n\n    if request.method == 'POST':\n        student.name = request.POST.get('name', student.name)\n        student.age = request.POST.get('age', student.age)\n        student.grade = request.POST.get('grade', student.grade)\n        student.email = request.POST.get('email', student.email)\n        student.save()\n\n        return JsonResponse({'id': student.id, 'message': 'Student updated successfully'})\n\n    return JsonResponse({'error': 'Invalid request method'}, status=405)\n",
      "doc": "### GET | POST - /student/edit/<student_id>\n\n##### 更新时间\n\n2024-12-05 12:21\n\n##### 描述\n\n该接口用于编辑指定学生的信息。用户需要提供学生的ID，接口将允许用户更新学生的姓名、年龄、年级和电子邮件信息。\n\n##### 参数\n\n- `student_id` (integer): 必填，学生的唯一标识符。\n\n##### 请求方法\n\n- `POST`: 用于提交学生信息的更新。\n\n##### 返回值 - Json\n\n- `id` (integer): 更新后的学生ID。\n- `message` (string): 操作结果信息，成功时显示“Student updated successfully”。\n\n##### 错误返回 - Json\n\n- `error` (string): 错误信息，当请求方法不正确时显示“Invalid request method”。\n\n##### 代码示例\n\n**curl:**\n\n```bash\ncurl -X POST http://{API_BASE}/student/edit/123 -H \"Content-Type: application/json\" -d '{\"name\": \"张三\", \"age\": 20, \"grade\": \"大一\", \"email\": \"zhangsan@example.com\"}'\n```\n\n**python:**\n\n```python\nimport requests\n\nurl = \"http://{API_BASE}/student/edit/123\"\ndata = {\"name\": \"张三\", \"age\": 20, \"grade\": \"大一\", \"email\": \"zhangsan@example.com\"}\n\nresponse = requests.post(url, json=data)\n\nprint(\"状态码:\", response.status_code)\nprint(\"响应内容:\", response.json())\n```\n\n**javascript:**\n\n```javascript\nconst axios = require('axios');\n\nconst url = 'http://{API_BASE}/student/edit/123';\nconst data = { name: '张三', age: 20, grade: '大一', email: 'zhangsan@example.com' };\n\naxios.post(url, data)\n    .then(response => {\n       console.log('状态码:', response.status);\n        console.log('响应内容:', response.data);\n      })\n    .catch(error => {\n        console.error('错误:', error.response ? error.response.data : error.message);\n    });\n```"
    }
  ]
}